require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.4'

target 'GenesisApp' do
  config = use_native_modules!

  use_react_native!(
    path: config[:reactNativePath],
    hermes_enabled: true
  )

  # Helper used by both hooks
  def sanitize_field(val)
    return val if val.nil?
    if val.is_a?(Array)
      val.reject { |t| t == '-G' }
    elsif val.is_a?(String)
      # remove a standalone -G token, keep lowercase -g if present
      val.split(/\s+/).reject { |t| t == '-G' }.join(' ')
    else
      val
    end
  end

  # Strip -G BEFORE Pods project is written (handles pods that inject it)
  pre_install do |installer|
    # nothing to iterate yet; just define post_writer hook
    Pod::Installer::PostInstallHooks::Composite.new
  end

  post_install do |installer|
    react_native_post_install(installer)

    # Sanitize EVERY target (Pods + user) and EVERY configuration
    targets = installer.pods_project.targets +
              installer.aggregate_targets.flat_map { |t| t.user_project.native_targets }

    targets.each do |t|
      t.build_configurations.each do |cfg|
        %w[OTHER_CFLAGS OTHER_CPLUSPLUSFLAGS OTHER_LDFLAGS].each do |k|
          cfg.build_settings[k] = sanitize_field(cfg.build_settings[k])
        end
      end
    end
  end
end
